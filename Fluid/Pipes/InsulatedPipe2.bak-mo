within ProsNet.Fluid.Pipes;
model InsulatedPipe2

  extends ProsNet.Fluid.Interfaces.PartialTwoPort(
    redeclare package Medium = ProsNet.Media.Water);

  parameter Modelica.Units.SI.Temperature T_amb(displayUnit="degC") = 285.15
    "Ambient temperature";


  parameter Real R_ins(min=0,unit="(K.m)/W")=3.78 "Thermal resistance per meter";

  parameter Modelica.Units.SI.Length length=10 "Length of the pipe";

  parameter Modelica.Units.SI.Length diameter=0.022 "Diameter of the pipe";


  parameter Modelica.Units.SI.Length roughness= 11*10^(-6) "inner roughness of the pipe material";

  parameter Real zeta(min=0)=3.5 "Local resistance coefficient";

  parameter Modelica.Units.SI.SpecificHeatCapacity cPip=2300
    "Specific heat of pipe wall material. 2300 for PE, 500 for steel";

  parameter Modelica.Units.SI.Density rhoPip(displayUnit="kg/m3") = 930
    "Density of pipe wall material. 930 for PE, 8000 for steel";

  parameter Modelica.Units.SI.Length thickness=0.0035 "Pipe wall thickness";

  parameter Modelica.Units.SI.Velocity u_nominal=0.5
    "nominal flow velocity (used to calculate nominal mass flow rate)";

  parameter Modelica.Units.SI.MassFlowRate m_flow_nominal = rho_default*u_nominal*Modelica.Constants.pi*(diameter^2)
    "Nominal mass flow rate";

  parameter Modelica.Fluid.Types.Dynamics energyDynamics = Modelica.Fluid.Types.Dynamics.SteadyState
    "Energy dynamics" annotation(Dialog(tab="Dynamics"));

  parameter Modelica.Units.SI.MassFlowRate m_flow_start=0
    "Start value for mass flow rate" annotation (Dialog(tab="Dynamics"));

  parameter Modelica.Units.SI.Pressure p_start=101325
    "Start value for pressure" annotation (Dialog(tab="Dynamics"));

  parameter Modelica.Units.SI.Temperature T_start=293.15
    "Start value for temperature" annotation (Dialog(tab="Dynamics"));

  FixedResistances.PlugFlowPipe plugFlowPipe(
    redeclare package Medium = ProsNet.Media.Water,
    dh=diameter,
    v_nominal=u_nominal,
    roughness=roughness,
    length=length,
    m_flow_nominal=m_flow_nominal,
    dIns(displayUnit="mm") = 0.019,
    kIns=0.04,
    cPip=cPip,
    rhoPip=rhoPip,
    thickness=thickness,
    R=R_ins,
    fac=1,
    nPorts=1) annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
protected
    parameter Medium.ThermodynamicState sta_default=Medium.setState_pTX(
      T=Medium.T_default,
      p=Medium.p_default,
      X=Medium.X_default) "Default medium state";

  parameter Modelica.Units.SI.SpecificHeatCapacity cp_default=
      Medium.specificHeatCapacityCp(state=sta_default)
    "Heat capacity of medium";

  parameter Modelica.Units.SI.Density rho_default=Medium.density_pTX(
      p=Medium.p_default,
      T=Medium.T_default,
      X=Medium.X_default)
    "Default density (e.g., rho_liquidWater = 995, rho_air = 1.2)";

  Modelica.Fluid.Fittings.SimpleGenericOrifice orifice2(
    redeclare replaceable package Medium = ProsNet.Media.Water,
    diameter=diameter,
    zeta=zeta/2)
    annotation (Placement(transformation(extent={{40,-10},{60,10}})));
  Modelica.Fluid.Fittings.SimpleGenericOrifice orifice1(
    redeclare replaceable package Medium = ProsNet.Media.Water,
    diameter=diameter,
    zeta=zeta/2)
    annotation (Placement(transformation(extent={{-60,-10},{-40,10}})));
  Modelica.Thermal.HeatTransfer.Sources.FixedTemperature bou(T=T_amb)
    "Boundary temperature"
    annotation (Placement(transformation(extent={{-34,60},{-14,80}})));
equation
  connect(port_a, orifice1.port_a)
    annotation (Line(points={{-100,0},{-60,0}}, color={0,127,255}));
  connect(orifice2.port_b, port_b)
    annotation (Line(points={{60,0},{100,0}}, color={0,127,255}));
  connect(orifice1.port_b, plugFlowPipe.port_a)
    annotation (Line(points={{-40,0},{-16,0}}, color={0,127,255}));
  connect(plugFlowPipe.ports_b[1], orifice2.port_a)
    annotation (Line(points={{4,0},{40,0}}, color={0,127,255}));
  connect(plugFlowPipe.heatPort, bou.port)
    annotation (Line(points={{-6,10},{-6,70},{-14,70}}, color={191,0,0}));
  annotation (defaultComponentName="pipe", Icon(coordinateSystem(preserveAspectRatio=true), graphics={
                                     Rectangle(
          extent={{-100,44},{100,-44}},
          fillPattern=FillPattern.HorizontalCylinder,
          fillColor={0,127,255}),
        Rectangle(
          extent={{-100,60},{100,44}},
          lineColor={28,108,200},
          fillColor={244,125,35},
          fillPattern=FillPattern.Solid),
        Rectangle(
          extent={{-100,-44},{100,-60}},
          lineColor={28,108,200},
          fillColor={244,125,35},
          fillPattern=FillPattern.Solid),
        Polygon(
          points={{22,-68},{62,-83},{22,-98},{22,-68}},
          lineColor={0,128,255},
          fillColor={0,128,255},
          fillPattern=FillPattern.Solid),
        Polygon(
          points={{22,-73},{52,-83},{22,-93},{22,-73}},
          lineColor={255,255,255},
          fillColor={255,255,255},
          fillPattern=FillPattern.Solid),
        Line(
          points={{57,-83},{-58,-83}},
          color={0,128,255}),
        Polygon(
          points={{22,-68},{62,-83},{22,-98},{22,-68}},
          lineColor={0,128,255},
          fillColor={0,128,255},
          fillPattern=FillPattern.Solid),
        Polygon(
          points={{22,-73},{52,-83},{22,-93},{22,-73}},
          lineColor={255,255,255},
          fillColor={255,255,255},
          fillPattern=FillPattern.Solid),
        Line(
          points={{57,-83},{-58,-83}},
          color={0,128,255})}),                    Diagram(
        coordinateSystem(preserveAspectRatio=true)),
    Documentation(info="<html>
<p><b>Model of insulated pipe.</b></p>
<p><br>The pipe model is based on <a href=\"modelica://Modelica.Fluid.Pipes.DynamicPipe\">DynamicPipe</a> from the Modelica Standard Library. Two features have been added to the base model. First, thermal losses are modeled. Second, the influence of minor hydraulic losses can be taken into account.</p>
</html>"));
end InsulatedPipe2;
