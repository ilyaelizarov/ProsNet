within ProsNet.Controls;
package HeatingStorageControlPackage
  model ControlChargingStorage
   model HeatingStorageControl
    // Define connectors
    connector RealInput = input Real;
    connector BooleanInput = input Boolean;
    connector BooleanOutput = output Boolean;


    // Define parameters
    parameter Real TStartCHP; // Temperature threshold to start the CHP
    parameter Real TStopCHP; // Temperature threshold to stop the CHP


    // Define input And output connectors

     Modelica.Blocks.Interfaces.RealInput TopTlayer
       annotation (Placement(transformation(extent={{-148,12},{-108,52}})));
     Modelica.Blocks.Interfaces.RealInput LowTlayer
       annotation (Placement(transformation(extent={{-148,-98},{-108,-58}})));
     Modelica.Blocks.Interfaces.BooleanInput UseChp
       annotation (Placement(transformation(extent={{-148,-38},{-108,2}})));
     Modelica.Blocks.Interfaces.BooleanOutput CHPON
       annotation (Placement(transformation(extent={{76,-10},{96,10}})));
    protected
    Boolean CHPon_internal; // Internal variable to hold the CHP state

   algorithm
    // Control logic for turning the CHP on
    if (TopTlayer < TStartCHP and UseChp) then
      CHPon_internal := true;
    end if;

    // Additional logic to turn the CHP off when lower layer temperature is too high
    if (LowTlayer > TStopCHP) then
      CHPon_internal := false;
    end if;

    // Assign the internal CHP state to the output
    CHPON := CHPon_internal;

   end HeatingStorageControl;
   annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
          coordinateSystem(preserveAspectRatio=false)));
  end ControlChargingStorage;
end HeatingStorageControlPackage;
